#! /bin/bash

function remedy() {
    local file=$1

    local name=$(basename $file| awk -F'.' '{ print $1 }')
    local min=$(echo $name | awk -F '-' '{ print $1 }')
    local max=$(echo $name | awk -F '-' '{ print $2 }')

    [ -z "$min" ] && echo "bad file" && exit 1
    [ -z "$max" ] && echo "bad file" && exit 1

    local num=$(wc -l $file| awk '{ print $1 }')
    sed -n "2,${num}p" $file > /tmp/$name

    while read line
    do
        x=$(echo $line | awk -F, '{ print $1 }')
        [ -z "$x" ] && break

        if [ $x -ge $min -a $x -le $max ]; then
            echo $line >> /tmp/$name
        fi
    done < userdata.txt

    sort -u -t, -V /tmp/$name > /tmp/$name.csv
    sed -i '1ix,y,level,type' /tmp/$name.csv
    mv /tmp/$name.csv $file
    git diff $file
}

column=0

sed -i '/All coordinates/,$d' README.md
echo -e "\nAll coordinates\n" >> README.md
echo -e "|X|count|X|count|X|count" >> README.md
echo -e "|----|:----:|----|:----:|----|:----:" >> README.md

for file in $(ls result/*.csv | sort -V)
do
    name=$(basename $file| awk -F'.' '{ print $1 }')
    min=$(echo $name | awk -F '-' '{ print $1 }')
    max=$(echo $name | awk -F '-' '{ print $2 }')

    remedy $file

    num=$(wc -l $file| awk '{ print $1 }')
    num=$(($num-1))

    column=$(($column+1))
    if [ $column -lt 3 ]; then
        echo -n "|[$name]($file)|$num" >> README.md
    else
        column=0
        echo "|[$name]($file)|$num" >> README.md
    fi
done
echo -e '\n---------------\n'>> README.md
